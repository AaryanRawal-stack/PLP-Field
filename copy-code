import os

def generate_code_text_file(root_dir, output_file, included_files):
    with open(output_file, 'w', encoding='utf-8') as out_file:
        for file_path in included_files:
            full_path = os.path.join(root_dir, file_path)
            
            try:
                with open(full_path, 'r', encoding='utf-8') as code_file:
                    content = code_file.read()
            except Exception as e:
                content = f"Could not read file due to: {str(e)}"
            
            out_file.write(f"The following is the code from {file_path}\n")
            out_file.write(content + "\n\n")

if __name__ == "__main__":
    project_directory = os.getcwd()  # Set to the current working directory
    output_filename = "project_code_dump.txt"
    
    included_files = [
        "package.json", "package-lock.json", "webpack.config.js", "readMe.md",
        "public/index.html", "public/manifest.json", "public/options.html", "public/popup.html",
        "public/icons/logo_128.png", "public/icons/logo_16.png", "public/icons/logo_48.png",
        "src/background/background.js", "src/content/content-script.js", "src/content/kodepay-script.js",
        "src/ui/popup/popup-main.js", "src/ui/popup/App.vue", "src/ui/popup/store.js", "src/ui/popup/messaging.js",
        "src/ui/options/optionspage.vue", "src/ui/options/options.js", "src/ui/options/main.js",
        "src/utils/extractionUtils.js", "src/utils/logger.js"
    ]
    
    generate_code_text_file(project_directory, output_filename, included_files)
    print(f"File '{output_filename}' has been generated successfully!")
